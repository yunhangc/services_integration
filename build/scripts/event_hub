#!/usr/bin/env bash

##############################################################################
##
##  event_hub start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and EVENT_HUB_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="event_hub"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything is touched.
if $cygwin ; then
    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >&-
APP_HOME="`pwd -P`"
cd "$SAVED" >&-

CLASSPATH=$APP_HOME/lib/event_hub-1.0-SNAPSHOT.jar:$APP_HOME/lib/spring-cloud-starter-hystrix-1.0.3.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-data-mongodb-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-web-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-actuator-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-cloud-starter-hystrix-dashboard-1.0.3.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-jetty-1.2.5.RELEASE.jar:$APP_HOME/lib/kafka_2.10-0.8.2.1.jar:$APP_HOME/lib/spring-integration-kafka-1.1.1.RELEASE.jar:$APP_HOME/lib/gson-2.3.1.jar:$APP_HOME/lib/feign-gson-8.10.0.jar:$APP_HOME/lib/feign-slf4j-8.10.0.jar:$APP_HOME/lib/spring-cloud-starter-1.0.3.RELEASE.jar:$APP_HOME/lib/spring-cloud-netflix-core-1.0.3.RELEASE.jar:$APP_HOME/lib/hystrix-core-1.4.10.jar:$APP_HOME/lib/hystrix-metrics-event-stream-1.4.10.jar:$APP_HOME/lib/hystrix-javanica-1.4.10.jar:$APP_HOME/lib/mongo-java-driver-2.12.5.jar:$APP_HOME/lib/spring-core-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-tx-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-data-mongodb-1.6.2.RELEASE.jar:$APP_HOME/lib/spring-boot-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-boot-autoconfigure-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-logging-1.2.4.RELEASE.jar:$APP_HOME/lib/snakeyaml-1.14.jar:$APP_HOME/lib/jackson-databind-2.4.6.jar:$APP_HOME/lib/hibernate-validator-5.1.3.Final.jar:$APP_HOME/lib/spring-web-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-webmvc-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-boot-actuator-1.2.4.RELEASE.jar:$APP_HOME/lib/spring-cloud-netflix-hystrix-dashboard-1.0.3.RELEASE.jar:$APP_HOME/lib/jetty-jsp-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-webapp-9.2.10.v20150310.jar:$APP_HOME/lib/websocket-server-9.2.10.v20150310.jar:$APP_HOME/lib/javax-websocket-server-impl-9.2.10.v20150310.jar:$APP_HOME/lib/metrics-core-2.2.0.jar:$APP_HOME/lib/scala-library-2.10.4.jar:$APP_HOME/lib/kafka-clients-0.8.2.1.jar:$APP_HOME/lib/zookeeper-3.4.6.jar:$APP_HOME/lib/jopt-simple-3.2.jar:$APP_HOME/lib/zkclient-0.3.jar:$APP_HOME/lib/avro-compiler-1.7.6.jar:$APP_HOME/lib/avro-1.7.6.jar:$APP_HOME/lib/spring-integration-core-4.1.4.RELEASE.jar:$APP_HOME/lib/metrics-annotation-2.2.0.jar:$APP_HOME/lib/feign-core-8.1.1.jar:$APP_HOME/lib/slf4j-api-1.7.12.jar:$APP_HOME/lib/spring-cloud-context-1.0.2.RELEASE.jar:$APP_HOME/lib/spring-cloud-commons-1.0.2.RELEASE.jar:$APP_HOME/lib/archaius-core-0.6.5.jar:$APP_HOME/lib/rxjava-1.0.11.jar:$APP_HOME/lib/jackson-core-2.4.6.jar:$APP_HOME/lib/aspectjweaver-1.8.5.jar:$APP_HOME/lib/aspectjrt-1.8.5.jar:$APP_HOME/lib/guava-18.0.jar:$APP_HOME/lib/commons-collections-3.2.1.jar:$APP_HOME/lib/commons-lang3-3.1.jar:$APP_HOME/lib/jsr305-2.0.0.jar:$APP_HOME/lib/spring-beans-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-context-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-expression-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-data-commons-1.9.2.RELEASE.jar:$APP_HOME/lib/jcl-over-slf4j-1.7.12.jar:$APP_HOME/lib/jul-to-slf4j-1.7.12.jar:$APP_HOME/lib/logback-classic-1.1.3.jar:$APP_HOME/lib/jackson-annotations-2.4.6.jar:$APP_HOME/lib/validation-api-1.1.0.Final.jar:$APP_HOME/lib/jboss-logging-3.1.3.GA.jar:$APP_HOME/lib/classmate-1.0.0.jar:$APP_HOME/lib/spring-aop-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-boot-starter-freemarker-1.2.4.RELEASE.jar:$APP_HOME/lib/httpclient-4.3.6.jar:$APP_HOME/lib/jquery-2.1.1.jar:$APP_HOME/lib/d3js-3.4.11.jar:$APP_HOME/lib/jetty-schemas-3.1.M0.jar:$APP_HOME/lib/javax.servlet-api-3.1.0.jar:$APP_HOME/lib/javax.servlet.jsp-api-2.3.1.jar:$APP_HOME/lib/javax.servlet.jsp-2.3.2.jar:$APP_HOME/lib/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:$APP_HOME/lib/javax.servlet.jsp.jstl-1.2.2.jar:$APP_HOME/lib/javax.el-3.0.0.jar:$APP_HOME/lib/org.eclipse.jdt.core-3.8.2.v20130121.jar:$APP_HOME/lib/jetty-xml-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-servlet-9.2.10.v20150310.jar:$APP_HOME/lib/websocket-common-9.2.10.v20150310.jar:$APP_HOME/lib/websocket-client-9.2.10.v20150310.jar:$APP_HOME/lib/websocket-servlet-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-http-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-annotations-9.2.10.v20150310.jar:$APP_HOME/lib/javax-websocket-client-impl-9.2.10.v20150310.jar:$APP_HOME/lib/javax.websocket-api-1.0.jar:$APP_HOME/lib/lz4-1.2.0.jar:$APP_HOME/lib/snappy-java-1.1.1.6.jar:$APP_HOME/lib/log4j-1.2.17.jar:$APP_HOME/lib/jline-0.9.94.jar:$APP_HOME/lib/netty-3.7.0.Final.jar:$APP_HOME/lib/commons-lang-2.6.jar:$APP_HOME/lib/velocity-1.7.jar:$APP_HOME/lib/jackson-core-asl-1.9.13.jar:$APP_HOME/lib/jackson-mapper-asl-1.9.13.jar:$APP_HOME/lib/paranamer-2.3.jar:$APP_HOME/lib/commons-compress-1.4.1.jar:$APP_HOME/lib/reactor-core-1.1.6.RELEASE.jar:$APP_HOME/lib/spring-messaging-4.1.6.RELEASE.jar:$APP_HOME/lib/spring-retry-1.1.2.RELEASE.jar:$APP_HOME/lib/spring-security-crypto-3.2.7.RELEASE.jar:$APP_HOME/lib/commons-configuration-1.8.jar:$APP_HOME/lib/annotations-2.0.0.jar:$APP_HOME/lib/logback-core-1.1.3.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/freemarker-2.3.22.jar:$APP_HOME/lib/spring-context-support-4.1.6.RELEASE.jar:$APP_HOME/lib/httpcore-4.3.3.jar:$APP_HOME/lib/commons-codec-1.6.jar:$APP_HOME/lib/jetty-util-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-security-9.2.10.v20150310.jar:$APP_HOME/lib/websocket-api-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-io-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-plus-9.2.10.v20150310.jar:$APP_HOME/lib/javax.annotation-api-1.2.jar:$APP_HOME/lib/asm-5.0.1.jar:$APP_HOME/lib/asm-commons-5.0.1.jar:$APP_HOME/lib/xz-1.0.jar:$APP_HOME/lib/disruptor-3.2.1.jar:$APP_HOME/lib/jsr166e-1.0.jar:$APP_HOME/lib/jetty-server-9.2.10.v20150310.jar:$APP_HOME/lib/jetty-jndi-9.2.10.v20150310.jar:$APP_HOME/lib/asm-tree-5.0.1.jar:$APP_HOME/lib/junit-4.12.jar:$APP_HOME/lib/hamcrest-core-1.3.jar:$APP_HOME/lib/gs-collections-5.1.0.jar:$APP_HOME/lib/gs-collections-api-5.1.0.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Split up the JVM_OPTS And EVENT_HUB_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=("$@")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $EVENT_HUB_OPTS


exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" com.afm.EventHub "$@"
